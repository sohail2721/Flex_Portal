@page "/GetAdminReport"
@using Microsoft.AspNetCore.Components.Authorization
@using Bismillah.Shared
@*@using Microsoft.AspNetCore.Mvc;
    @using Microsoft.AspNetCore.Mvc.RazorPages;*@
@using Microsoft.AspNetCore.WebUtilities;
@using MudBlazor
@using System.Globalization;
@inject AuthenticationStateProvider authstate
@inject HttpClient http
@inject IJSRuntime jsr
@inject NavigationManager Navigation
@inject NavigationManager NavigationManager
<html>

<head>
    <style>
        .switch {
            position: relative;
            display: inline-block;
            width: 60px;
            height: 34px;
        }

            .switch input {
                display: none;
            }

        .slider {
            position: absolute;
            cursor: pointer;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background-color: #ccc;
            -webkit-transition: .4s;
            transition: .4s;
            border-radius: 17px;
        }

            .slider:before {
                position: absolute;
                content: "";
                height: 26px;
                width: 26px;
                left: 4px;
                bottom: 4px;
                background-color: white;
                -webkit-transition: .4s;
                transition: .4s;
                border-radius: 50%;
            }

        input:checked + .slider {
            background-color: #2196F3;
        }

        input:focus + .slider {
            box-shadow: 0 0 1px #2196F3;
        }

        input:checked + .slider:before {
            -webkit-transform: translateX(26px);
            -ms-transform: translateX(26px);
            transform: translateX(26px);
        }

        /* Style for table */
        table {
            border-collapse: collapse;
            width: 100%;
        }


        th, td {
            text-align: left;
            padding: 8px;
            border: 1px solid #ddd;
        }

        th {
            background-color: #4285f4;
            color: white;
        }

        .add-attendance-button {
            background-color: #007bff;
            border: none;
            color: white;
            padding: 0.5rem 1rem;
            text-align: center;
            text-decoration: none;
            display: inline-block;
            font-size: 16px;
            cursor: pointer;
        }

            .add-attendance-button:hover {
                background-color: #0062cc;
            }

        .center {
            text-align: center;
        }
        /* Style for select menu */
        select {
            width: 50%;
            padding: 8px 16px;
            border: 1px solid #ccc;
            border-radius: 4px;
            box-sizing: border-box;
            margin-bottom: 12px;
            margin-left: auto;
            margin-right: auto;
            display: block;
            font-size: 16px;
            color: #555;
            background-color: #fff;
            appearance: none;
            outline: none;
            cursor: pointer;
        }

            /* Style for select menu arrow */
            select::after {
                content: '\25BC';
                position: absolute;
                top: 50%;
                right: 10px;
                transform: translateY(-50%);
                color: #555;
            }

        /* Style for select menu label */
        label[for="courses"] {
            display: block;
            margin-bottom: 6px;
            text-align: center;
            font-size: 18px;
            font-weight: bold;
        }
    </style>
</head>
<body>
    @if (selectedReport == "Offered")
    {
        <table>
            <thead>
                <tr>
                    <th>Course ID</th>
                    <th>Course Name</th>
                    <th>Grading Type</th>
                    <th>Credit Hours</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var row in OfferedCourses)
                {
                    <tr>
                        <td>@row.Course_ID</td>
                        <td>@row.Course_Name</td>
                        <td>@row.Grading_Type</td>
                        <td>@row.Credit_Hours</td>
                    </tr>
                }
            </tbody>
        </table>
    }
    else if (selectedReport == "Allocation")
    {
        <table>
            <thead>
                <tr>
                    <th>Faculty ID</th>
                    <th>Name</th>
                    <th>Course ID</th>

                </tr>
            </thead>
            <tbody>
                @foreach (var row in Details)
                {
                    <tr>
                        <td>@row.FacultyID</td>
                        <td>@row.First_name @row.Last_name</td>
                        <td>@row.Course_ID</td>
                    </tr>
                }
            </tbody>
        </table>
    }
    else if (selectedReport == "Student")
    {
        <select id="courses" name="courses" @onchange="SelectionChanged">
            <option value="@OfferedCourses.ToList()[0].Course_ID">Select a course...</option>
            @foreach (var row in OfferedCourses)
            {
                <option value="@row.Course_ID">@row.Course_ID - @row.Course_Name</option>
            }

        </select>
        <table>
            <thead>
                <tr>
                    <th>Student ID</th>
                    <th>Name</th>
                    <th>Course ID</th>

                </tr>
            </thead>
            <tbody>
                @foreach (var row in Report)
                {
                    <tr>
                        <td>@row.Roll_NO</td>
                        <td>@row.First_Name @row.Last_Name</td>
                        <td>@row.Course_ID</td>
                    </tr>
                }
            </tbody>
        </table>


    }

    <br />
    <div class="center">
        <button @onclick="() => NavigateToAddNewCourse()" class="add-attendance-button">Go Back</button>

    </div>

</body>
</html>




@code{
    string selectedCourse;
    List<GetOfferedCourses> OfferedCourses = new List<GetOfferedCourses>();
    List<FacultyDetails> Details = new List<FacultyDetails>();
    List<GetCoursesInfoModel> CoursesInfo = new List<GetCoursesInfoModel>();
    List<AdminReportTwoModel> Report = new List<AdminReportTwoModel>();
    string selectedReport;

    protected async override Task OnInitializedAsync()
    {

        OfferedCourses = await http.GetFromJsonAsync<List<GetOfferedCourses>>($"api/AdminDashboard/GetOfferedCourses");
        Details = await http.GetFromJsonAsync<List<FacultyDetails>>($"api/AdminDashboard/GetFacultyDetails");

        var uri = new Uri(NavigationManager.Uri);
        var queryString = QueryHelpers.ParseQuery(uri.Query);
        selectedReport = queryString["selectedReport"];

    }
    private async Task SelectionChanged(ChangeEventArgs args)
    {
        selectedCourse = args.Value.ToString();
        Report = await http.GetFromJsonAsync<List<AdminReportTwoModel>>($"api/AdminDashboard/ReportTwo/{selectedCourse}");

    }
    private void NavigateToAddNewCourse()
    {
        NavigationManager.NavigateTo($"/AdminReports");

    }

}