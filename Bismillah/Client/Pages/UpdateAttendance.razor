@page "/UpdateAttendance"
@using Microsoft.AspNetCore.Components.Authorization
@using Bismillah.Shared
@*@using Microsoft.AspNetCore.Mvc;
    @using Microsoft.AspNetCore.Mvc.RazorPages;*@
@using Microsoft.AspNetCore.WebUtilities;
@using MudBlazor
@using System.Globalization;

@inject AuthenticationStateProvider authstate
@inject HttpClient http
@inject IJSRuntime jsr
@inject NavigationManager Navigation
@inject NavigationManager NavigationManager

<!DOCTYPE html>
<html>
<head>
    <style>
        .form-group {
            margin-bottom: 1rem;
        }

        label {
            display: block;
            margin-bottom: 0.5rem;
            font-weight: bold;
        }

        input[type="date"] {
            padding: 0.5rem;
            border: 1px solid #ccc;
            border-radius: 0.25rem;
            font-size: 1rem;
            width: 100%;
            box-sizing: border-box;
        }

        table {
            border-collapse: collapse;
            width: 100%;
            max-width: 800px;
            margin: 0 auto;
        }

        thead th {
            background-color: #f2f2f2;
            color: #333;
            font-weight: bold;
            text-align: left;
            padding: 10px;
            border-bottom: 2px solid #ddd;
        }

        tbody td {
            padding: 10px;
            border-bottom: 1px solid #ddd;
        }

        select {
            padding: 5px;
            font-size: 16px;
            border-radius: 5px;
        }

        .login-container button {
            display: block;
            width: 100%;
            padding: 10px;
            border: none;
            border-radius: 5px;
            background: #007bff;
            color: #fff;
            font-size: 16px;
            cursor: pointer;
        }

            .login-container button:hover {
                background: #0062cc;
            }
        /* Style for select menu */
        select {
            width: 50%;
            padding: 8px 16px;
            border: 1px solid #ccc;
            border-radius: 4px;
            box-sizing: border-box;
            margin-bottom: 12px;
            margin-left: auto;
            margin-right: auto;
            display: block;
            font-size: 16px;
            color: #555;
            background-color: #fff;
            appearance: none;
            outline: none;
            cursor: pointer;
        }

            /* Style for select menu arrow */
            select::after {
                content: '\25BC';
                position: absolute;
                top: 50%;
                right: 10px;
                transform: translateY(-50%);
                color: #555;
            }
        /* Style for select menu label */
        label[for="courses"] {
            display: block;
            margin-bottom: 6px;
            text-align: center;
            font-size: 18px;
            font-weight: bold;
        }
    </style>
</head>
<body>
    <h1>Update Attendance</h1>
    <br>
    <label for="courses">Select Date to Update Attendance:</label>
    <select id="Dates" name="Dates" @onchange="SelectionChangedDate">
        <option value="NULL">Select a date...</option>

        @foreach (var row in UploadedDate)
        {
            <option value="@row.Date">@row.Date</option>
        }

    </select>


    @*<h3>Attendance Date: @selectedDate</h3>*@
    <table>
        <thead>
            <tr>
                <th>Roll No.</th>
                <th>Student Name</th>
                <th>Current Status</th>
                <th>New Status</th>
            </tr>
        </thead>
        <tbody>



            @foreach (var row in AttendanceSystem)
            {
                <tr>
                    <td>
                        @row.Roll_NO
                    </td>
                    <td>  @row.First_Name @row.Last_Name</td>


                    <td>
                        @row.Status

                    </td>

                    <td>
                        <select @onchange="(ChangeEventArgs e) => AttendanceArray[row.Roll_NO] = e.Value.ToString()">
                            <option value="@row.Status">--</option>
                            <option value="P">Present</option>
                            <option value="A">Absent</option>
                            <option value="L">Leave</option>
                        </select>

                    </td>


                </tr>


            }


        </tbody>
    </table>
    <div class="login-container">
        <MudButton Variant="Variant.Filled" Color="Color.Primary" Class="login-button" OnClick="@SubmitAttendance">Update</MudButton>
    </div>


</body>
</html>


@code{
    //string[] AttendanceArray = new string[300];
    Dictionary<string, string> AttendanceArray = new Dictionary<string, string>();

    public int arrCounter = 0;
    int arrsize;
    string currentUserName;
    public string selectedCourse { get; set; }
    public string selectedDate { get; set; }
    public string outputDate { get; set; }
    //[BindProperty]
    //public DateTime selectedDate { get; set; }
    public string formattedDate;
    List<AttendanceModelForUploaded> AttendanceSystem = new List<AttendanceModelForUploaded>();
    AttendanceModelForUpdate system = new AttendanceModelForUpdate();
    List<AttendanceDateListModel> UploadedDate = new List<AttendanceDateListModel>();
    protected async override Task OnInitializedAsync()
    {

        ApiRequest.http = http;
        ApiRequest.jsr = jsr;
        var authstates = await authstate.GetAuthenticationStateAsync();
        currentUserName = authstates.User.Identity.Name;

        var uri = new Uri(NavigationManager.Uri);
        var queryString = QueryHelpers.ParseQuery(uri.Query);

        selectedCourse = queryString["selectedCourse"];
        //selectedDate = queryString["selectedDate"];
        UploadedDate = await http.GetFromJsonAsync<List<AttendanceDateListModel>>($"api/FacultyDashboard/GetUploadedAttendanceDates/{selectedCourse}/{currentUserName}");



    }

    private async Task SelectionChangedDate(ChangeEventArgs args)
    {
        selectedDate = args.Value.ToString();

        DateTime date = DateTime.ParseExact(selectedDate, "MM/dd/yyyy HH:mm:ss", CultureInfo.InvariantCulture);
        outputDate = date.ToString("dd-MMM-yyyy").ToUpper();
        AttendanceSystem = await http.GetFromJsonAsync<List<AttendanceModelForUploaded>>($"api/FacultyDashboard/GetAttendanceForDate/{currentUserName}/{selectedCourse}/{outputDate}");
        foreach (var row in AttendanceSystem)
        {
            AttendanceArray[row.Roll_NO] = row.Status;
            arrsize++;
        }
    }

    protected async Task SubmitAttendance()
    {

        foreach (var item in AttendanceArray)
        {
            string rollNo = item.Key;
            string attendance = item.Value;
            system.FacultyID = currentUserName;
            system.Roll_No = rollNo;
            system.Status = attendance;
            system.CourseID = selectedCourse;
            system.Date = outputDate;
            //Console.WriteLine(system.FacultyID + " " + system.Date + system.Roll_No + " " + system.Status);
            await ApiRequest.PostRequest<SuccessMessageModel>("api/FacultyDashboard/UpdateAttendance", system);
            await jsr.InvokeVoidAsync("writeToFile", "hello.txt", "Attendance updated by " + currentUserName + " at " + DateTime.Now.ToString() + "\n");
        }
        NavigationManager.NavigateTo($"/FacultyHomepage");



    }
}