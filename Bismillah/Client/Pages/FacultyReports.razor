@page "/FacultyReports"
@using Microsoft.AspNetCore.Components.Authorization
@using Bismillah.Shared
@inject AuthenticationStateProvider authstate
@inject HttpClient http
@inject IJSRuntime jsr
@inject NavigationManager Navigation
@inject NavigationManager NavigationManager
<html>

<head>
    <style>
        .switch {
            position: relative;
            display: inline-block;
            width: 60px;
            height: 34px;
        }

            .switch input {
                display: none;
            }

        .slider {
            position: absolute;
            cursor: pointer;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background-color: #ccc;
            -webkit-transition: .4s;
            transition: .4s;
            border-radius: 17px;
        }

            .slider:before {
                position: absolute;
                content: "";
                height: 26px;
                width: 26px;
                left: 4px;
                bottom: 4px;
                background-color: white;
                -webkit-transition: .4s;
                transition: .4s;
                border-radius: 50%;
            }

        input:checked + .slider {
            background-color: #2196F3;
        }

        input:focus + .slider {
            box-shadow: 0 0 1px #2196F3;
        }

        input:checked + .slider:before {
            -webkit-transform: translateX(26px);
            -ms-transform: translateX(26px);
            transform: translateX(26px);
        }

        /* Style for table */
        table {
            border-collapse: collapse;
            width: 100%;
        }


        th, td {
            text-align: left;
            padding: 8px;
            border: 1px solid #ddd;
        }

        th {
            background-color: #4285f4;
            color: white;
        }

        .add-attendance-button {
            background-color: #007bff;
            border: none;
            color: white;
            padding: 0.5rem 1rem;
            text-align: center;
            text-decoration: none;
            display: inline-block;
            font-size: 16px;
            cursor: pointer;
        }

            .add-attendance-button:hover {
                background-color: #0062cc;
            }

        .center {
            text-align: center;
        }
        /* Style for select menu */
        select {
            width: 50%;
            padding: 8px 16px;
            border: 1px solid #ccc;
            border-radius: 4px;
            box-sizing: border-box;
            margin-bottom: 12px;
            margin-left: auto;
            margin-right: auto;
            display: block;
            font-size: 16px;
            color: #555;
            background-color: #fff;
            appearance: none;
            outline: none;
            cursor: pointer;
        }

            /* Style for select menu arrow */
            select::after {
                content: '\25BC';
                position: absolute;
                top: 50%;
                right: 10px;
                transform: translateY(-50%);
                color: #555;
            }

        /* Style for select menu label */
        label[for="courses"] {
            display: block;
            margin-bottom: 6px;
            text-align: center;
            font-size: 18px;
            font-weight: bold;
        }
        #my-alert {
            position: fixed;
            top: 80px;
            right: 20px;
            width: 300px;
            background-color: #ffffff;
            border: none;
            border-radius: 4px;
            box-shadow: 0 2px 6px rgba(0, 0, 0, 0.2);
            transition: opacity 0.3s ease-in-out;
            color: #fff;
        }

        .alert-container {
            display: flex;
            align-items: center;
            justify-content: space-between;
            padding: 10px;
        }

        .alert-text {
            font-size: 16px;
            color: #FFA500;
        }

        .close-button {
            border: none;
            background-color: transparent;
            font-size: 16px;
            color: #fff;
            cursor: pointer;
            transition: color 1.0s ease-in-out;
        }

            .close-button:hover {
                color: #ccc;
            }
    </style>
</head>
<body>
    <h1>Reports</h1>
    <br />
    <br />
    <div id="my-alert" style="@($"display: {(showAlert ? "flex" : "none")}; opacity: {(showAlert ? 1 : 0)}")">
        <div class="alert-container">
            <span class="oi oi-warning alert-text"> Invalid Selection</span>
            <button class="close-button" @onclick="() => HideAlert()">x</button>
        </div>
    </div>

    <label for="courses">Select Report:</label>
    <select id="courses" name="courses" @onchange="SelectionChanged">
        <option value="NULL">Select a report...</option>
        <option value="Attendance">Attendance Sheet Report</option>
        <option value="Eval">Evaluation Report</option>
        <option value="Grade">Grade Report</option>
        <option value="CGrade">Count of Grade Report</option>



    </select>

    <br />
    <div class="center">
        <button @onclick="() => NavigateToAddNewCourse()" class="add-attendance-button">Get Report</button>

    </div>

</body>
</html>




@code{
    string selectedReport;
    private bool showAlert = false;


    protected async override Task OnInitializedAsync()
    {

        selectedReport = "";
    }
    private void SelectionChanged(ChangeEventArgs args)
    {
        selectedReport = args.Value.ToString();

    }
    private void ShowAlert()
    {
        showAlert = true;
        StateHasChanged();
    }

    private void HideAlert()
    {
        showAlert = false;
        StateHasChanged();
    }
    private async Task NavigateToAddNewCourse()
    {
        if (selectedReport == string.Empty)
        {
            ShowAlert();
            await jsr.InvokeVoidAsync("eval", "document.getElementById('my-alert').style.display = 'block';");
            // Set timer to hide alert after 5 seconds
            await Task.Delay(3000);
            HideAlert();
        }
        else
        {
            NavigationManager.NavigateTo($"/GetFacultyReport?selectedReport={selectedReport}");
        }


    }

}